# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...



            - name: Run golangci-lint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-golangci-lint@00311c26a97213f93f2fd3a3524d66762e956ae0
  uses: reviewdog/action-golangci-lint@v2.6.1
  with:
    # GITHUB_TOKEN.
    github_token: # default is ${{ github.token }}
    # golangci-lint flags. (golangci-lint run --out-format=line-number <golangci_lint_flags>)
    golangci_lint_flags: # optional, default is 
    # Tool name to use for reviewdog reporter
    tool_name: # optional, default is golangci
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review,github-check].
    reporter: # optional, default is github-pr-check
    # Filtering for the reviewdog command [added,diff_context,file,nofilter].
Default is added.

    filter_mode: # optional, default is added
    # Exit code for reviewdog when errors are found [true,false]
Default is `false`.

    fail_on_error: # optional, default is false
    # Additional reviewdog flags
    reviewdog_flags: # optional, default is 
    # Working directory relative to the root directory.
    workdir: # optional, default is .
    # the version of reviewdog
    reviewdog_version: # optional, default is latest
    # the version of golangci-lint
    golangci_lint_version: # optional, default is latest
    # the version of Go. By default, the latest version of Go 1.x is installed.
    go_version: # optional
    # Path to the go.mod file or the file containing only Go version.
    go_version_file: # optional
    # enable cache
    cache: # optional, default is true
          
